# ***************************************************************
# 
#   file:  NMakefile
#   desc:  Makefile for CoreDX latency test application
#  
# ***************************************************************
# 
#    Coypright(C) 2009-2011 Twin Oaks Computing, Inc
#    All rights reserved.   Castle Rock, CO 80108
# 
# ****************************************************************
# 
#   This file is provided by Twin Oaks Computing, Inc
#   as an example. It is provided in the hope that it will be 
#   useful but WITHOUT ANY WARRANTY; without even the implied 
#   warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR 
#   PURPOSE. TOC Inc assumes no liability or responsibilty for 
#   the use of this information for any purpose.
#   
# ***************************************************************/

##########################################################
#
# This Makefile uses the following environment variables:
#  COREDX_TOP
#  COREDX_HOST
#  COREDX_TARGET
# These variables can be set manually, or determined by
# running the script  coredx/scripts/cdxenv.sh or cdxenv.bat
#
##########################################################

# Define our sources and objects
C_EXECUTABLE      = latency_test_c.exe
CPP_EXECUTABLE    = latency_test_cpp.exe

# latency_test sources and objects
latency_CSRCS     = main.c
latency_COBJS     = main.obj

latency_CCSRCS    = maincpp.cc
latency_CCOBJS    = maincpp.obj

# generated source code
latency_GENCSRCS  = latencyTypeSupport.c latencyDataReader.c latencyDataWriter.c latency.c
latency_GENCHDRS  = latencyTypeSupport.h latencyDataReader.h latencyDataWriter.h latency.h
latency_GENCOBJS  = $(latency_GENCSRCS:.c=.obj)

latency_GENCCSRCS = latencycpp.cc latencycppTypeSupport.cc latencycppDataReader.cc latencycppDataWriter.cc
latency_GENCCHDRS = latencycpp.hh latencycppDataReader.hh latencycppDataWriter.hh latencycppTypeSupport.hh
latency_GENCCOBJS = $(latency_GENCCSRCS:.cc=.obj)

latency_ALLCOBJS  = $(latency_GENCOBJS)  $(latency_COBJS)
latency_ALLCCOBJS = $(latency_GENCCOBJS) $(latency_CCOBJS)

##########################################################
# Setup Compile Environment
# We assume both gcc and coredx_ddl are in your path!
CC         = cl.exe
CXX	   = cl.exe 
DDL        = $(COREDX_TOP)\host\$(COREDX_HOST)\bin\coredx_ddl.exe

INC_PATH   = -I$(COREDX_TOP)\target\include
LIBS       = $(COREDX_TOP)\target\$(COREDX_TARGET)\lib\dds_static.lib WS2_32.lib Iphlpapi.lib winmm.lib user32.lib gdi32.lib shell32.lib advapi32.lib 
CFLAGS     = /nologo /MT $(INC_PATH) 
CPPFLAGS   = /nologo /MT /EHsc $(INC_PATH) 
CPPLIBS    = $(COREDX_TOP)\target\$(COREDX_TARGET)\lib\dds_cpp_static.lib $(COREDX_TOP)\target\$(COREDX_TARGET)\lib\dds_static.lib WS2_32.lib Iphlpapi.lib winmm.lib user32.lib gdi32.lib shell32.lib advapi32.lib 

###########################################################
# NOTE: 
# The COREDX_DLL define ('/DCOREDX_DLL') is necessary for 
# when compiling code that will link against the 'DLL' 
# version of dds.lib
#
# If you want to link against the dynamic library, add the
# /DCOREDX_DLL compile flag, and list 'dds.lib' 
# instead of 'dds_static.lib'.
#
# [For now, the C++ library dds_cpp.lib requires the static
#  library dds_static.lib]
#
##########################################################


##########################################################
# Rules for compiling

all: $(C_EXECUTABLE)  $(CPP_EXECUTABLE) 

latency_test_c.exe: $(latency_ALLCOBJS)
	cl.exe /nologo /Fe$@ $** -link $(LIBS) 

latency_test_cpp.exe: $(latency_ALLCCOBJS)
	cl.exe /nologo /Fe$@ $** -link $(CPPLIBS) 


##########################################################
# Rules for generating code from DDL

$(latency_GENCSRCS) $(latency_GENCHDRS): latency.ddl
	$(DDL) -f $**

$(latency_GENCCSRCS) $(latency_GENCCHDRS): latency.ddl
	$(DDL) -b latencycpp -l cpp -f $**

##########################################################
# Rules for cleaning

clean:
	del  $(latency_ALLCOBJS) $(latency_ALLCCOBJS) $(C_EXECUTABLE) $(CPP_EXECUTABLE)

reallyclean: clean
	del $(latency_GENCSRCS) $(latency_GENCHDRS) $(latency_GENCCSRCS) $(latency_GENCCHDRS) 


##########################################################
# Additional dependencies
main.obj: latency.h latencyTypeSupport.h latencyDataWriter.h
latencyTypeSupport.obj: latencyTypeSupport.c latency.h latencyTypeSupport.h
latencyDataReader.obj: latencyDataReader.c latency.h
latencyDataWriter.obj: latencyDataWriter.c latency.h
latency.obj: latency.c latency.h

maincpp.obj: latencycpp.hh latencycppTypeSupport.hh latencycppDataWriter.hh
latencycppTypeSupport.obj: latencycppTypeSupport.cc latencycpp.hh latencycppTypeSupport.hh
latencycppDataReader.obj: latencycppDataReader.cc latencycpp.hh
latencycppDataWriter.obj: latencycppDataWriter.cc latencycpp.hh
latencycpp.obj: latencycpp.cc latencycpp.hh


# inference rule for .cc files
.SUFFIXES:.cc .c

.cc.obj:
	$(CPP) $(CPPFLAGS) /c /Tp$*.cc
